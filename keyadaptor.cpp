/*
 * This file was generated by dbusidl2cpp version 0.5
 * when processing input file org.kde.kgpg.Key.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#include "keyadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class KeyAdaptor
 */

KeyAdaptor::KeyAdaptor(QObject *parent)
   : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

KeyAdaptor::~KeyAdaptor()
{
    // destructor
}

bool KeyAdaptor::importRemoteKey(const QString &keyID)
{
    // handle method call org.kde.kgpg.Key.importRemoteKey
    bool out0;
    QMetaObject::invokeMethod(parent(), "importRemoteKey", Q_RETURN_ARG(bool, out0), Q_ARG(QString, keyID));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->importRemoteKey(keyID);
    return out0;
}

void KeyAdaptor::showKeyInfo(const QString &keyID)
{
    // handle method call org.kde.kgpg.Key.showKeyInfo
    QMetaObject::invokeMethod(parent(), "showKeyInfo", Q_ARG(QString, keyID));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->showKeyInfo(keyID);
}

void KeyAdaptor::showKeyManager()
{
    // handle method call org.kde.kgpg.Key.showKeyManager
    QMetaObject::invokeMethod(parent(), "showKeyManager");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->showKeyManager();
}

void KeyAdaptor::showKeyServer()
{
    // handle method call org.kde.kgpg.Key.showKeyServer
    QMetaObject::invokeMethod(parent(), "showKeyServer");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->showKeyServer();
}

void KeyAdaptor::showOptions()
{
    // handle method call org.kde.kgpg.Key.showOptions
    QMetaObject::invokeMethod(parent(), "showOptions");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->showOptions();
}


#include "keyadaptor.moc"
